/* "use client"

import React, { useEffect, useState } from 'react';
import { useSearchParams } from 'next/navigation';
import { SearchInput } from '@/components/search-input-result';
import { RiHeartLine, RiShare2Line } from '@remixicon/react';
import Skeleton from 'react-loading-skeleton';
import 'react-loading-skeleton/dist/skeleton.css';

interface Data {
  id: number;
  subject: string;
  class: string;
  education_level: string;
  exam_type: string;
  institution: string;
  description: string;
  exam_page_link: string;
  exam_file_path: string;
  year: number;
  uploaded_date: Date;
}

export default function SearchResults() {
  const [data, setData] = useState<Data[]>([]);
  const [filteredData, setFilteredData] = useState<Data[]>([]);
  const [loading, setLoading] = useState(true);
  const searchParams = useSearchParams();
  const searchQuery = searchParams.get('q') || '';

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await fetch('/api/all-data');
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        const result = await response.json();
        setData(result);
        setLoading(false);
      } catch (error) {
        console.error('Fetch error:', error);
        setLoading(false);
      }
    };

    fetchData();
  }, []);

  useEffect(() => {
    if (!loading) {
      const handleSearch = () => {
        const searchTerms = searchQuery.toLowerCase().split(' ').filter(term => term.trim() !== '');

        const filtered = data.filter(item => {
          const itemYearString = item.year.toString().toLowerCase();
          return (
            searchTerms.some(term => item.class.toLowerCase().includes(term)) ||
            searchTerms.some(term => item.subject.toLowerCase().includes(term)) ||
            searchTerms.some(term => item.institution.toLowerCase().includes(term)) ||
            searchTerms.some(term => item.exam_type.toLowerCase().includes(term)) ||
            searchTerms.some(term => item.education_level.toLowerCase().includes(term)) ||
            searchTerms.some(term => item.description.toLowerCase().includes(term)) ||
            searchTerms.some(term => itemYearString.includes(term)) // Check if any term matches the year
          );
        });

        setFilteredData(filtered);
      };

      handleSearch();
    }
  }, [data, searchQuery, loading]);

  return (
    <main className="flex-grow flex flex-col py-8 md:py-16 px-6 md:px-8 xl:px-16 w-full m-auto">
      <div className="flex flex-col items-center w-full">
        <div className="flex flex-col items-center w-full mx-auto">
          <div>
            <span className="text-4xl md:text-6xl font-bold text-teal-600">
              Mapepa
            </span>
            <span className="text-xl md:text-3xl text-gray-500">.com</span>
          </div>
          <SearchInput defaultValue={searchQuery} />
        </div>
        <div className="mb-10 lg:mb-16 mt-4 text-lg text-center">
          <span className="text-gray-500">
            Showing results for <br className="block sm:hidden" />
          </span>
          <span className="font-bold">{searchQuery || 'All Results'}</span>
        </div>
        <div className="flex flex-col items-start">
          {loading ? (
            <div className="space-y-4">
              {[...Array(5)].map((_, index) => (
                <div
                  key={index}
                  className="flex items-center justify-between w-full lg:w-[900px] border-b border-gray-300 pb-6 lg:pb-8 mb-8 lg:mb-16"
                >
                  <div className="flex flex-col items-start gap-0.5 lg:gap-1">
                    <Skeleton height={24} width={350} />
                    <Skeleton height={20} width={150} />
                    <Skeleton height={20} width={120} />
                    <Skeleton height={24} width={150} />
                    <div className="mt-2 flex gap-2">
                      <Skeleton height={20} width={80} />
                      <Skeleton height={20} width={80} />
                      <Skeleton height={20} width={60} />
                    </div>
                  </div>
                  <div className="hidden lg:flex gap-8">
                    <Skeleton circle={true} height={24} width={24} />
                    <Skeleton circle={true} height={24} width={24} />
                  </div>
                </div>
              ))}
            </div>
          ) : (
            filteredData.length > 0 ? (
              filteredData.map(item => (
                <div
                  key={item.id}
                  className="flex items-center justify-between w-full lg:w-[900px] border-b border-gray-300 pb-6 lg:pb-8 mb-8 lg:mb-16"
                >
                  <div className="flex flex-col items-start gap-0.5 lg:gap-1">
                    <div className="text-md lg:text-lg font-bold text-teal-600">
                      <div>{item.institution}</div>
                      <div>{item.subject}</div>
                    </div>
                    <div className="text-sm lg:text-lg text-gray-500">
                      Annual Examinations {item.class} - {item.year}
                    </div>
                    <div className="text-sm lg:text-md text-gray-500">
                      Kinondoni Region
                    </div>
                    <div className="mt-2 flex gap-2">
                      <span className="inline-flex items-center rounded-md bg-yellow-50 px-2 py-1 text-xs font-medium text-yellow-800 ring-1 ring-inset ring-yellow-600/20">
                        {item.exam_type}
                      </span>
                      <span className="inline-flex items-center rounded-md bg-purple-50 px-2 py-1 text-xs font-medium text-purple-700 ring-1 ring-inset ring-purple-700/10">
                        {item.education_level}
                      </span>
                      <span className="inline-flex items-center rounded-md bg-pink-50 px-2 py-1 text-xs font-medium text-pink-700 ring-1 ring-inset ring-pink-700/10">
                        Math
                      </span>
                    </div>
                  </div>
                  <div className="hidden lg:flex gap-8">
                    <RiHeartLine color="#6b7280" />
                    <RiShare2Line color="#6b7280" />
                  </div>
                </div>
              ))
            ) : (
              <div className="text-center text-gray-500">
                <p>No results found for "{searchQuery}"</p>
                <p>Try searching with different keywords or check out our <a href="/popular">popular items</a>.</p>
              </div>
            )
          )}
        </div>
      </div>
    </main>
  );
}
 */